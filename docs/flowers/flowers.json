[
  {
    "path": "flowers/2021-04-13-joy-division-en-pancrudo/",
    "title": "Joy Division en Pancrudo!!",
    "description": "El t√≠tulo es un poco exagerado. Ojala!! Ojala, porque eso significar√≠a que Ian Curtis estar√≠a vivo y que el Gaire se ha hecho muy grande y famoso. Lo que hago en el post, bueno har√©, es un gr√°fico parecido al de la m√≠tica portada de Unknown Pleasures  de los Joy Division usando los datos de elevaci√≥n de mi pueblo, Pancrudo. Todo ello gracias a Daniel Redondo que hizo lo mismo pero para la provincia de Granada.",
    "author": [
      {
        "name": "Pedro J. P√©rez",
        "url": {}
      }
    ],
    "date": "2021-04-13",
    "categories": [
      "aRt"
    ],
    "contents": "\n\nContents\nIntro\nJoy Division en Pancrudo, al menos su plot.\nPlot final de Daniel\nY yo le pongo un marco\n\n\nAl l√≠o. R√°pido-r√°pido.\nIntro\nResulta que hace tiempo vi este post de Daniel Redondo en el que se hacia un Joy Division plot con el relieve de la provincia de Granada. Cuando le√≠ el post, intent√© replicarlo, pero no pude/supe bajar los datos de altitud, as√≠ que lo deje, pero hace unos d√≠as vi el paquete elevatr que hace que sea pan comido el bajar este tipo de datos. As√≠ que ‚Ä¶ a la segunda va la vencida. Seguro porque ya he hecho el plot.\nQuien no sepa de que va el tema, puede echar un vistazo a este post sobre la portada de Unknown Pleasures, el primer disco de Joy Division\nJoy Division en Pancrudo, al menos su plot.\nPara hacer el mapa se necesita el contorno, o geometr√≠a de Pancrudo y los datos de elevaci√≥n. Ya los tengo del anterior post\n\n\nEl c√≥digo:\n\n#- hace falta tener la geometr√≠a, en este caso de Pancrudo\n#- remotes::install_github(\"rOpenSpain/LAU2boundaries4spain\")\nmunicipios <- LAU2boundaries4spain::municipios_2021 \nmunicipios <- pjpv.datos.01::LAU2_muni_2020_canarias\npancrudo_bound <- municipios %>% filter(ine_muni.n == \"Pancrudo\")\n\n#- bajamos datos de elevaci√≥n (Pancrudo) -----------------\nelevation_data <- elevatr::get_elev_raster(locations = pancrudo_bound, z = 9, clip = \"locations\")\n#- convertimos en data.frame y arreglamos\nelevation_data <- as.data.frame(elevation_data, xy = TRUE)\ncolnames(elevation_data)[3] = \"elevation\"\n#- quitamos NA's\nelevation_data <- elevation_data[complete.cases(elevation_data),] \n\n\n\nUna vez tenemos los datos de elevaci√≥n s√≥lo hay que seguir al pie de la letra el post de Daniel. Muchas gracias Daniel!!\nLa primera aproximaci√≥n no queda muy-muy chula, as√≠ que no la muestro.\n\n\nEl c√≥digo:\n\n#- ahora el Joy Division plot: https://danielredondo.com/posts/20200125_joy_division/\nlibrary(ggplot2)\nlibrary(ggridges)\nlibrary(mapproj)\n\n# Primera aproximaci√≥n\nggplot(elevation_data, aes(x = x, y = y, group = y, height = elevation)) +\n  geom_density_ridges(stat = \"identity\", scale = 70)\n\n\n\nPlot final de Daniel\n\nPero el final plot de Daniel es muy-muy chulo. Por decir que he cambiado algo, voy a hacerlo en verde. üòú\n\n\nEl c√≥digo:\n\n#- final plot de Daniel\np <- ggplot(elevation_data, aes(x = x, y = y, group = y, height = elevation)) +\n  geom_density_ridges(stat = \"identity\", scale = 30,\n                      fill = \"black\", color = \"green\") +\n  scale_x_continuous(name = NULL) +\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill = \"black\"),\n        axis.line = element_blank(),\n        axis.text.x = element_blank(),\n        plot.background = element_rect(fill = \"black\"),\n        axis.ticks.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.title.x = element_text(colour = \"white\", size = 18)) +\n  coord_map()\np\n\nggsave(p, filename = here::here(\"imagenes\", \"joy_division_Pancrudo_01.png\"),\n       device = \"png\", width = 12, height = 10, units = \"cm\")\n\n\n\n\n\n\n\nY yo le pongo un marco\nHe intentado hacer alguna cosa m√°s como poner alguna linea de otro color, situar a Pancrudo, pero todo muy r√°pido. Ya jugar√© m√°s con el plot alg√∫n d√≠a si me decido a hacer las camisetas. Creo que s√≠, mis hijos quieren una.\nAl final me quedo con este plot:\n\n\n\nPara acabar, el c√≥digo todo junto:\n\n\nEl c√≥digo:\n\n#- R script para hacer el flower post de 11 de Abril de 2021\n#- voy a usar datos de elevaci√≥n de aqui: https://rspatialdata.github.io/elevation.html\n\nlibrary(tidyverse)\nlibrary(raster)\nlibrary(elevatr)\nlibrary(sf)\nlibrary(viridis)\n\n#library(rgeoboundaries) #- remotes::install_gitlab(\"dickoa/rgeoboundaries\")\n#swiss_bound <- geoboundaries(\"Switzerland\")\n#- aa <- rgeoboundaries::gb_adm0(\"Spain\")\n\n#- hace falta tener la geometr√≠a, en este caso de Pancrudo\n#- remotes::install_github(\"rOpenSpain/LAU2boundaries4spain\")\nmunicipios <- LAU2boundaries4spain::municipios_2021 \nmunicipios <- pjpv.datos.01::LAU2_muni_2020_canarias\npancrudo_bound <- municipios %>% filter(ine_muni.n == \"Pancrudo\")\n\n#- bajamos datos de elevaci√≥n (Pancrudo) -----------------\nelevation_data <- elevatr::get_elev_raster(locations = pancrudo_bound, z = 9, clip = \"locations\")\n#- convertimos en data.frame y arreglamos\nelevation_data <- as.data.frame(elevation_data, xy = TRUE)\ncolnames(elevation_data)[3] = \"elevation\"\n#- quitamos NA's\nelevation_data <- elevation_data[complete.cases(elevation_data),] \n\n#- ahora el Joy Division plot: https://danielredondo.com/posts/20200125_joy_division/\nlibrary(ggplot2)\nlibrary(ggridges)\nlibrary(mapproj)\n\n# Primera aproximaci√≥n\np0 <- ggplot(elevation_data, aes(x = x, y = y, group = y, height = elevation)) +\n  geom_density_ridges(stat = \"identity\", scale = 70)\n\nggsave(p0, filename = here::here(\"imagenes\", \"joy_division_Pancrudo_00.png\"),\n       device = \"png\", width = 10, height = 13, units = \"cm\")\n\n#- grafico final de Daniel\np <- ggplot(elevation_data, aes(x = x, y = y, group = y, height = elevation)) +\n  geom_density_ridges(stat = \"identity\", scale = 30,\n                      fill = \"black\", color = \"orange\") +\n  scale_x_continuous(name = NULL) +\n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_rect(fill = \"black\"),\n        axis.line = element_blank(),\n        axis.text.x = element_blank(),\n        plot.background = element_rect(fill = \"black\"),\n        axis.ticks.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.y = element_blank(),\n        axis.ticks.y = element_blank(),\n        axis.title.x = element_text(colour = \"white\", size = 18)) +\n  coord_map()\np\n\nggsave(p, filename = here::here(\"imagenes\", \"joy_division_Pancrudo_01.png\"),\n       device = \"png\", width = 12, height = 10, units = \"cm\")\n\n\n#- intento hacer una linea en verde\nelevation_verde <- elevation_data %>% filter(near(y, 40.79164, tol = 0.000081))\np + geom_density_ridges(data = elevation_verde, aes(x = x, y = y, group = y, height = elevation), stat = \"identity\", scale = 30, fill = \"black\", color = \"white\")\n\n\n#- intento de ponerle un marco GOOD -------------------\n#pancrudo_xx <- pancrudo_bound %>% sf::st_set_geometry(NULL)\np2 <- p + coord_sf(xlim = c(-1.095, -0.933), ylim = c(40.73, 40.91), expand = FALSE) +\n  theme(plot.margin = unit(c(0.25, 0.25, 0.25, 0.25), \"cm\")) +\n  #geom_point(data = pancrudo_bound, aes(x = X, y = Y), color = \"white\", fill = NA, shape = 15, size = 2) +\n  theme(plot.background = element_rect(colour = \"snow2\", size = 10.7)) +\n  geom_text(data = data.frame(x = -0.987, y = 40.736, label = \"Pancrudo, Teruel\"),\n            mapping = aes(x = x, y = y, label = label),\n            size = 5.2, hjust = 0, vjust = 0, \n            colour = \"orange\", inherit.aes = FALSE) \n\np2\n\nggsave(p2, filename = here::here(\"imagenes\", \"joy_division_Pancrudo_02_naranja.png\"),\n       device = \"png\", width = 15, height = 20, units = \"cm\")\n\n\n\nFIN\nPD: Me quedo con las ganas de replicar otro post de Daniel, este. De hecho lo he probado y sal√≠a, solo que a la hora de poner los hexstickers en los hex√°gonos me quedaba sin memoria, yo no, el PC. Tengo el c√≥digo en el fichero .R del post anterior, el de el mapa con las elevaciones de Pancrudo (no √† la Joy Division).\n\n\n\n",
    "preview": "flowers/2021-04-13-joy-division-en-pancrudo/imagenes/preview_joy_division_Pancrudo_02_naranja.png",
    "last_modified": "2021-04-13T12:38:55+02:00",
    "input_file": {},
    "preview_width": 624,
    "preview_height": 411
  },
  {
    "path": "flowers/2021-04-10-mapa-con-elevacin-de-pancrudo/",
    "title": "Mapa con las elevaciones de Pancrudo",
    "description": "El objetivo es hacer uno o varios mapas con datos de elevaci√≥n del terreno. Seguramente har√© uno para Pancrudo y alguno m√°s. Al final he situado en el mapa las fuentes y los montes de Pancrudo. Casi nada!! Ahora si que me los aprendo!",
    "author": [
      {
        "name": "Pedro J. P√©rez",
        "url": {}
      }
    ],
    "date": "2021-04-10",
    "categories": [
      "maps"
    ],
    "contents": "\n\nContents\nIntro\nDatos de elevaci√≥n\nHaciendo el plot\nVariaciones/mejorando el plot\nMunicipios vecinos de Pancrudo\nPueblos del municipio de Pancrudo\n\n\nIntro\nVoy a hacer unos mapas con datos de elevaci√≥n del terreno. ¬øQue por qu√©? Pues resulta que no se muy bien c√≥mo, llegu√© a esta web donde explican c√≥mo descargar datos de elevaci√≥n del terreno usando el paquete de R elevatr. He probado un poco con el paquete y me ha salido a la primera, todo muy f√°cil, as√≠ que, aqu√≠ estoy redactando el post. Adem√°s, recuerdo que hace tiempo vi un post con datos de elevaci√≥n de la provincia de Granada en el que se hac√≠a un gr√°fico parecido a la portada de Unknown Pleasures, el primer disco de Joy Division e intent√© replicarlo pero no consegu√≠ bajarme datos de elevaci√≥n, tampoco lo intente massa, pero ahora ya tengo los datos de elevaci√≥n, as√≠ que a ver si me sale o encuentro el post, que no quiero calentarme mucho el cap. Si consigo hacer un plot replicando la portada de Joy Division, a√±adir√© al post la categor√≠a de aRt. Acabo de encontrar el post, es de Daniel Redondo: Mapas estilo Joy Division con QGIS y R. No conf√≠o mucho en que me salga, no quiero perder massa temps, pero como me salga hago camisetas per tutti.\nDatos de elevaci√≥n\nLa p√°gina rspatialdata da acceso a distintos tipos de datos espaciales: temperatura, lluvia, ‚Ä¶ Concretamente, los datos de elevaci√≥n son accesibles desde R con el paquete elevatr. En est√° p√°gina se explica de donde proceden los datos y c√≥mo hacer uso de ellos. Es muy f√°cil!!\nPara descargar los datos de elevaci√≥n hace falta tener la geometr√≠a del pa√≠s/regi√≥n que te interesa. Yo voy a usar datos del paquete LAU2boundaries4Spain, para algo lo he hecho yo, pero el an√°lisis en el que me baso usa el paquete rgeoboundaries.\nPor ejemplo, para descargar datos de elevaci√≥n de mi pueblo, Pancrudo, he de:\n\n\nEl c√≥digo:\n\n#- hace falta tener la geometr√≠a, en este caso de Pancrudo\n#- remotes::install_github(\"rOpenSpain/LAU2boundaries4spain\")\nmunicipios <- pjpv.datos.01::LAU2_muni_2020_canarias\npancrudo_bound <- municipios %>% filter(ine_muni.n == \"Pancrudo\")\naa <- sf::st_touches(pancrudo_bound, municipios)[[1]]\npancrudo_vecinos <- municipios %>% slice(aa)\n#- bajamos datos de elevaci√≥n (Pancrudo) -----------------\nelevation_data <- elevatr::get_elev_raster(locations = pancrudo_bound, z = 9, clip = \"locations\")\n#- convertimos en data.frame y arreglamos\nelevation_data <- as.data.frame(elevation_data, xy = TRUE)\ncolnames(elevation_data)[3] = \"elevation\"\n#- quitamos NA's\nelevation_data <- elevation_data[complete.cases(elevation_data),] \n\n\n\nHaciendo el plot\nYa tenemos todo lo necesario para hacer el plot, as√≠ que:\n\n\nEl c√≥digo:\n\n#- el plot (sin vecinos) ------------------\np <- ggplot() +\n  #geom_sf(data = pancrudo_vecinos, color = \"grey\", fill = NA) +\n  #geom_label(data = pancrudo_vecinos, color = \"grey\", fill = NA) +\n  geom_raster(data = elevation_data, aes(x = x, y = y, fill = elevation)) +\n  geom_sf(data = pancrudo_bound, color = \"black\", fill = NA) +\n  coord_sf() +\n  #scale_fill_gradient(colours = terrain.colors(10)) +\n  scale_fill_gradient(low = \"white\", high = \"brown\") +\n  #scale_fill_gradient(low = \"grey90\", high = \"black\") +\n  #scale_fill_viridis_c(direction = -1, guide = guide_legend(direction = \"horizontal\")) +\n  ggtitle(\"Relieve de Pancrudo\") + \n  pjpv2020.01::theme_pjp_maps() +\n  ggplot2::theme(legend.position = c(0.1, 0.75)) +\n  ggplot2::theme(legend.background = \n                   ggplot2::element_rect(fill = NA , color = NA)) +\n  labs(caption = \"Datos de elevaci√≥n del paquete elevatr\\n Geometr√≠as del paquete LAU2boundaries4spain | Visualizaci√≥n: @pjpv4444\") +\n  theme(plot.caption = element_text(size = 7))\np\nggsave(p, filename = here::here(\"imagenes\", \"relieve_elevacion_Pancrudo.png\"),\n       device = \"png\", width = 10, height = 13, units = \"cm\")\n#- OK, conseguido. A ver si puedo mejorarlo algo!!!\n#- primero simplement cambiar el color y ...\n#- whit tinter pkg: https://github.com/sebdalgarno/tinter\nlibrary(tinter)\nhex <- \"#335CAC\"\ntinter(hex, steps = 10, crop = 7)\np_blue <- p +  scale_fill_gradientn(colours = tinter(hex, steps = 10)) +\n  theme(legend.position =\"bottom\")\nggsave(p_blue, filename = here::here(\"imagenes\", \"relieve_elevacion_Pancrudo_blue.png\"),\n       device = \"png\", width = 10, height = 13, units = \"cm\")\nlibrary(patchwork)\np_mas_blue <- p + p_blue\nggsave(p_mas_blue, filename = here::here(\"imagenes\", \"relieve_elevacion_Pancrudo_2.png\"),\n       device = \"png\", width = 20, height = 15, units = \"cm\")\n\n\n\n\n\n\n\nHay algunos fallitos, pero como dice mi hijo, pues ya estar√≠a.\nVariaciones/mejorando el plot\nLa verdad es que ya que me he puesto, voy a hacer varias cosas que me apetecen:\nponer en el mapa a los pueblos vecinos de Pancrudo y ver si est√°n m√°s altos que nosotros,\nsituar en el mapa a los cuatro pueblos del municipio de Pancrudo\nsituar los montes de Pancrudo (El Morteruelo y amigos)\nMunicipios vecinos de Pancrudo\nMunicipios que no pueblos, porque el pueblo m√°s cercano a Pancrudo es Cervera del Rinc√≥n, pero los 2 pueblos pertenecen al municipio de Pancrudo. El proceso es muy-muy parecido. Los datos de altitud del relieve proceden del paquete elevatr, mientras que la geolocalizaci√≥n y datos de altitud de los municipios proceden del Nomencl√°tor Geogr√°fico de Municipios y Entidades de Poblaci√≥n.\n\n\nEl c√≥digo:\n\n#- el plot (con vecinos) --------------\np_vecinos <- ggplot() +\n  #- datos de elevaci√≥n del terreno\n  geom_raster(data = elevation_data_vecinos, aes(x = x, y = y, fill = elevation)) +\n  #- geometrias de los municipios vecinos\n  geom_sf(data = pancrudo_vecinos, color = \"grey5\", fill = NA) +\n  #- los municipios vecinos\n  geom_point(data = pancrudo_vecinos, aes(x = X, y = Y), color = \"grey5\", fill = NA) +\n  geom_text(data = pancrudo_vecinos, \n            aes(x = X, y = Y-0.009, label = glue::glue(\"{ine_muni.n}\\n({ALTITUD})\")),\n            color = \"grey5\", fontface = \"bold\",  check_overlap = TRUE, size = 2.2) +\n  #- datos de elevacion de Pancrudo\n  geom_raster(data = elevation_data, aes(x = x, y = y, fill = elevation)) +\n  #- geometria de Pancrudo\n  geom_sf(data = pancrudo_bound, color = \"black\", fill = NA, size = 0.8) +\n  #- municipio de Pancrudo\n  geom_point(data = pancrudo_bound, aes(x = X, y = Y), color = \"darkgreen\", fill = NA, shape = 15, size = 2) +\n  geom_text(data = pancrudo_bound, \n            aes(x = X+0.007, y = Y-0.01, label = glue::glue(\"{ine_muni.n}\\n(1233)\")),\n            color = \"darkgreen\", fontface = \"bold\",  check_overlap = TRUE, size = 3.1) +\n  coord_sf() +\n  #- pruebo varias escalas\n  #scale_fill_gradient(colours = terrain.colors(10)) +\n  scale_fill_gradient(low = \"white\", high = \"brown\") +\n  #scale_fill_gradient(low = \"grey90\", high = \"black\") +\n  #scale_fill_viridis_c(direction = -1, guide = guide_legend(direction = \"horizontal\")) +\n  ggtitle(\"Relieve de Pancrudo (y vecinos)\") + \n  pjpv2020.01::theme_pjp_maps() +\n  ggplot2::theme(legend.position = c(0.07, 0.82)) +\n  ggplot2::theme(legend.background = \n                   ggplot2::element_rect(fill = NA , color = NA)) +\n  labs(caption = \"Datos de elevaci√≥n del paquete elevatr\\n Geometr√≠as del paquete LAU2boundaries4spain | Visualizaci√≥n: @pjpv4444\") +\n  theme(plot.caption = element_text(size = 7))\np_vecinos\nggsave(p_vecinos, filename = here::here(\"imagenes\", \"relieve_elevacion_Pancrudo_vecinos.png\"),\n       device = \"png\", width = 18, height = 14, units = \"cm\")\n\n\n\n\n\n\nBueno, como veis, casi toda la zona est√° por encima de 1000 metros. Rillo es el pueblo que m√°s alto est√°, nos ganan por un poquito!!!\n\nPueblos del municipio de Pancrudo\nEl municipio de Pancrudo tiene 4 pueblos y quiero situar a los cuatro en el mapa. Podr√≠a usar datos del IGN de Entidades, pero prefiero geolocalizar. ¬øPara que ir andando si se puede ir a rastras?1 Vamos all√°.\nPara geolocalizar uso el paquete tidygeocoder:\n\n\nEl c√≥digo:\n\n#- voy a geolocalizar ----------\npueblos <- tibble::tibble(\n  pueblo = c(\"Cervera del Rinc√≥n\" ,   \"Cuevas de Portalrubio\", \"Pancrudo\",\"Portalrubio\"  ),\n  provincia = \"Teruel\",\n  pais = \"Spain\")\npueblos <- pueblos %>% mutate(text_to_geocode = paste(pueblo, provincia, pais, sep = \", \"))\n# now geocode -----\nlibrary(tidygeocoder)\npueblos <- pueblos %>% tidygeocoder::geocode(text_to_geocode, method = \"osm\") %>% dplyr::select(- text_to_geocode)\n# convert coordinates to an sf object\n#pueblos <- pueblos %>% sf::st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326)\n\n\n\nYa que me pongo, voy a situar tambi√©n en el mapa los montes y las fuentes de Pancrudo. A ver si ya me aprendo sus nombres y donde est√°n!! Los datos de los montes y fuentes proceden del Nomencl√°tor Geogr√°fico B√°sico de Espa√±a.\nPara hacer el mapa final que muestro, he hecho un mapa para los montes, otro para las fuentes y los he unido con pactwork despu√©s he creado el t√≠tulo y la caption con el paquete cowplot.\n\n\nEl c√≥digo:\n\n#- situo los 4 pueblos como puntos\npp <- p + geom_point(data = pueblos, aes(x = long, y = lat), shape = 15, color = \"darkgreen\", size = 2.5) + \n  #geom_point(data = pueblos1, aes(x = LONGITUD_ETRS89, y = LATITUD_ETRS89), color = \"purple\") + \n  #ggrepel::geom_label_repel(data = pueblos, aes(x = long, y = lat, label = pueblo)) +\n  geom_text(data = pueblos, \n           aes(x = long, y = lat+0.003, label = pueblo),\n           color = \"darkgreen\", fontface = \"bold\",  check_overlap = TRUE, size = 3.1) \npp\n#- meto los accidentes geograficos de Pancrudo (nomenclator geografico del IGN)\naccidentes <- rio::import(\"/home/pjpv/Escritorio/my_datos_2021/datos/IGN/pancrudo_IGN_nomenclator_geografico.rds\")\ntipos_acc <- accidentes %>% distinct(codigo_ngbe, codigo_ngbe_text)\naccidentes_montes <- accidentes %>% filter(codigo_ngbe %in% c(\"4.1.3\", \"4.1.2\"))\naccidentes_fuentes <- accidentes %>% filter(codigo_ngbe %in% c(\"5.5\"))\naccidentes_vertices <- accidentes %>% filter(codigo_ngbe %in% c(\"2.3.1\"))\njanitor::tabyl(accidentes, codigo_ngbe_text )\npp_montes <- pp + \n  geom_point(data = accidentes_montes, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95), color = \"black\", shape = 17) +\n  geom_point(data = accidentes_vertices, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95), color = \"black\", shape = 8) +\n  geom_text(data = accidentes_vertices, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95+0.003, label = identificador_geografico),\n            color = \"black\", check_overlap = TRUE, size = 3) +\n  geom_text(data = accidentes_montes, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95-0.002, label = identificador_geografico),\n            color = \"black\", check_overlap = TRUE, size = 2.5) +\n  labs(title = \"Montes de Pancrudo\",\n       caption = \"\") +\n  theme(legend.position = \"none\") +\n  theme(plot.title = element_text(color = \"saddlebrown\"))+\n    theme(plot.title = element_text(hjust = 0.5))     # Center ggplot title\n  \npp_fuentes <- pp + \n  geom_point(data = accidentes_fuentes, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95), color = \"navyblue\") +\n  geom_text(data = accidentes_fuentes, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95-0.002, label = identificador_geografico),\n       color = \"navyblue\", check_overlap = TRUE, size = 2.5) +\n  labs(title = \"Fuentes de Pancrudo\", caption = \"\") +\n  theme(plot.title = element_text(color = \"midnightblue\"))+\n  theme(plot.title = element_text(hjust = 0.5))     # Center ggplot title\n#- OK voy a juntar pp_fuentes y pp_montes en un gr√°fico con patch y luego le voy a a√±adir label y caption con cowplot\nlibrary(patchwork)\nppp <- pp_montes + pp_fuentes\nppp\nlibrary(cowplot)\ntitle <- ggdraw() +\n  draw_label(\"Relieve del municipio de Pancrudo\",\n             fontfamily = \"DejaVu Serif Condensed\",\n             #colour = \"lightpink4\",\n             hjust = 0.5, size = 24)\ncaption <- ggdraw() +\n  draw_label(\"\\n Datos de montes y fuentes del IGN | Datos de elevaci√≥n del paquete elevatr\\n Geometr√≠as del paquete LAU2boundaries4spain | Visualizaci√≥n: @pjpv4444\",\n             #fontfamily = \"DejaVu Serif Condensed\",\n             #colour = \"lightpink4\",\n             hjust = 0.5,\n             size = 8) \npppp <- plot_grid(title,\n               #plot_grid(ppp, nrow = 1, rel_widths = c(0.5, 0.5)),\n               ppp,\n               caption,\n               ncol = 1,\n               rel_heights = c(0.15, 0.754, 0.06))\npppp\n#- no consigo quitar el marco blanco ???\nzz <- pppp + pjpv2020.01::theme_pjp_maps()\n  \nzz  + theme(panel.background = ggplot2::element_rect(fill = \"#f5f5f2\", color = \"#f5f5f2\"),\n                   plot.background = ggplot2::element_rect(fill = \"#f5f5f2\", color = NA),\n                   panel.border = ggplot2::element_rect(fill = \"#f5f5f2\", color = NA))\nzz\nggsave(zz, filename = here::here(\"imagenes\", \"relieve_elevacion_Pancrudo_fuentes.png\"),\n       device = \"png\", width = 24, height = 17, units = \"cm\")\nknitr::plot_crop(here::here(\"imagenes\", \"relieve_elevacion_Pancrudo_fuentes.png\"))\n\n\n\n\n\n\nNo he conseguido quitar el marco blanco pero, ahora s√≠ que ya estar√≠a. El objetivo era hacer un plot a la Joy Division pero me he liado. Lo voy a hacer en el siguiente post que lo voy a hacer r√°pido-r√°pido\nPara acabar, el c√≥digo todo junto:\n\n\nEl c√≥digo:\n\n#- R script para hacer el flower post de 10 de Abril de 2021\n#- voy a usar datos de elevaci√≥n de aqui: https://rspatialdata.github.io/elevation.html\nlibrary(tidyverse)\nlibrary(raster)\nlibrary(elevatr)\nlibrary(sf)\nlibrary(viridis)\n#library(rgeoboundaries) #- remotes::install_gitlab(\"dickoa/rgeoboundaries\")\n#swiss_bound <- geoboundaries(\"Switzerland\")\n#- aa <- rgeoboundaries::gb_adm0(\"Spain\")\n#- hace falta tener la geometr√≠a, en este caso de Pancrudo\nmunicipios <- pjpv.datos.01::LAU2_muni_2020_canarias\npancrudo_bound <- municipios %>% filter(ine_muni.n == \"Pancrudo\")\naa <- sf::st_touches(pancrudo_bound, municipios)[[1]]\npancrudo_vecinos <- municipios %>% slice(aa)\n#- bajamos datos de elevaci√≥n (Pancrudo) -----------------\nelevation_data <- elevatr::get_elev_raster(locations = pancrudo_bound, z = 9, clip = \"locations\")\n#- convertimos en data.frame y arreglamos\nelevation_data <- as.data.frame(elevation_data, xy = TRUE)\ncolnames(elevation_data)[3] = \"elevation\"\n#- quitamos NA's\nelevation_data <- elevation_data[complete.cases(elevation_data),] \n#- el plot (sin vecinos) ------------------\np <- ggplot() +\n  #geom_sf(data = pancrudo_vecinos, color = \"grey\", fill = NA) +\n  #geom_label(data = pancrudo_vecinos, color = \"grey\", fill = NA) +\n  geom_raster(data = elevation_data, aes(x = x, y = y, fill = elevation)) +\n  geom_sf(data = pancrudo_bound, color = \"black\", fill = NA) +\n  coord_sf() +\n  #scale_fill_gradient(colours = terrain.colors(10)) +\n  scale_fill_gradient(low = \"white\", high = \"brown\") +\n  #scale_fill_gradient(low = \"grey90\", high = \"black\") +\n  #scale_fill_viridis_c(direction = -1, guide = guide_legend(direction = \"horizontal\")) +\n  ggtitle(\"Relieve de Pancrudo\") + \n  pjpv2020.01::theme_pjp_maps() +\n  ggplot2::theme(legend.position = c(0.1, 0.75)) +\n  ggplot2::theme(legend.background = \n                   ggplot2::element_rect(fill = NA , color = NA)) +\n  labs(caption = \"Datos de elevaci√≥n del paquete elevatr\\n Geometr√≠as del paquete LAU2boundaries4spain | Visualizaci√≥n: @pjpv4444\") +\n  theme(plot.caption = element_text(size = 7))\np\nggsave(p, filename = here::here(\"imagenes\", \"relieve_elevacion_Pancrudo.png\"),\n       device = \"png\", width = 10, height = 13, units = \"cm\")\n#- OK, conseguido. A ver si puedo mejorarlo algo!!!\n#- primero simplement cambiar el color y ...\n#- whit tinter pkg: https://github.com/sebdalgarno/tinter\nlibrary(tinter)\nhex <- \"#335CAC\"\ntinter(hex, steps = 10, crop = 7)\np_blue <- p +  scale_fill_gradientn(colours = tinter(hex, steps = 10)) +\n  theme(legend.position =\"bottom\")\nggsave(p_blue, filename = here::here(\"imagenes\", \"relieve_elevacion_Pancrudo_blue.png\"),\n       device = \"png\", width = 10, height = 13, units = \"cm\")\nlibrary(patchwork)\np_mas_blue <- p + p_blue\nggsave(p_mas_blue, filename = here::here(\"imagenes\", \"relieve_elevacion_Pancrudo_2.png\"),\n       device = \"png\", width = 20, height = 15, units = \"cm\")\n#- Pueblos vecinos --------------------------\n#- bajamos datos de elevaci√≥n (vecinos Pancrudo) \nelevation_data_vecinos <- elevatr::get_elev_raster(locations = pancrudo_vecinos, z = 9, clip = \"locations\")\n#- convertimos en data.frame y arreglamos\nelevation_data_vecinos <- as.data.frame(elevation_data_vecinos, xy = TRUE)\ncolnames(elevation_data_vecinos)[3] = \"elevation\"\n#- quitamos NA's\nelevation_data_vecinos <- elevation_data_vecinos[complete.cases(elevation_data_vecinos),] \n#- altitud de los vecinos (segun IGN)\npueblos_ign <- rio::import(\"/home/pjpv/Escritorio/my_datos_2021/datos/codigos/IGN_municipios.xlsx\") %>% dplyr::select(ine_muni, ine_muni.n, ALTITUD, ine_prov.n)\nnames(pueblos_ign)\npancrudo_vecinos <- left_join(pancrudo_vecinos, pueblos_ign) %>% dplyr::select(ine_muni, ine_muni.n, ALTITUD, ine_prov.n, X, Y)\npancrudo_vecinos <- pancrudo_vecinos %>% mutate(textito = glue::glue(\"{ine_muni.n}\\n({ALTITUD})\"))\n#- el plot (con vecinos) --------------\np_vecinos <- ggplot() +\n  #- datos de elevaci√≥n del terreno\n  geom_raster(data = elevation_data_vecinos, aes(x = x, y = y, fill = elevation)) +\n  #- geometrias de los municipios vecinos\n  geom_sf(data = pancrudo_vecinos, color = \"grey5\", fill = NA) +\n  #- los municipios vecinos\n  geom_point(data = pancrudo_vecinos, aes(x = X, y = Y), color = \"grey5\", fill = NA) +\n  geom_text(data = pancrudo_vecinos, \n            aes(x = X, y = Y-0.009, label = glue::glue(\"{ine_muni.n}\\n({ALTITUD})\")),\n            color = \"grey5\", fontface = \"bold\",  check_overlap = TRUE, size = 2.2) +\n  #- datos de elevacion de Pancrudo\n  geom_raster(data = elevation_data, aes(x = x, y = y, fill = elevation)) +\n  #- geometria de Pancrudo\n  geom_sf(data = pancrudo_bound, color = \"black\", fill = NA, size = 0.8) +\n  #- municipio de Pancrudo\n  geom_point(data = pancrudo_bound, aes(x = X, y = Y), color = \"darkgreen\", fill = NA, shape = 15, size = 2) +\n  geom_text(data = pancrudo_bound, \n            aes(x = X+0.007, y = Y-0.01, label = glue::glue(\"{ine_muni.n}\\n(1233)\")),\n            color = \"darkgreen\", fontface = \"bold\",  check_overlap = TRUE, size = 3.1) +\n  coord_sf() +\n  #- pruebo varias escalas\n  #scale_fill_gradient(colours = terrain.colors(10)) +\n  scale_fill_gradient(low = \"white\", high = \"brown\") +\n  #scale_fill_gradient(low = \"grey90\", high = \"black\") +\n  #scale_fill_viridis_c(direction = -1, guide = guide_legend(direction = \"horizontal\")) +\n  ggtitle(\"Relieve de Pancrudo (y vecinos)\") + \n  pjpv2020.01::theme_pjp_maps() +\n  ggplot2::theme(legend.position = c(0.07, 0.82)) +\n  ggplot2::theme(legend.background = \n                   ggplot2::element_rect(fill = NA , color = NA)) +\n  labs(caption = \"Datos de elevaci√≥n del paquete elevatr\\n Geometr√≠as del paquete LAU2boundaries4spain | Visualizaci√≥n: @pjpv4444\") +\n  theme(plot.caption = element_text(size = 7))\np_vecinos\nggsave(p_vecinos, filename = here::here(\"imagenes\", \"relieve_elevacion_Pancrudo_vecinos.png\"),\n       device = \"png\", width = 18, height = 14, units = \"cm\")\n#- Poner los 4 pueblos de Pancrudo -----------------\npueblos1 <- rio::import(\"/home/pjpv/Escritorio/my_datos_2021/datos/codigos/IGN_municipios.xlsx\") %>% filter(stringr::str_detect(COD_INE_CAPITAL, \"^44177\"))\np + geom_point(data = pueblos1, aes(x = LONGITUD_ETRS89, y = LATITUD_ETRS89))\nnames(pueblos1)\n#- voy a geolocalizar ----------\npueblos <- tibble::tibble(\n  pueblo = c(\"Cervera del Rinc√≥n\" ,   \"Cuevas de Portalrubio\", \"Pancrudo\",\"Portalrubio\"  ),\n  provincia = \"Teruel\",\n  pais = \"Spain\")\npueblos <- pueblos %>% mutate(text_to_geocode = paste(pueblo, provincia, pais, sep = \", \"))\n# now geocode -----\nlibrary(tidygeocoder)\npueblos <- pueblos %>% tidygeocoder::geocode(text_to_geocode, method = \"osm\") %>% dplyr::select(- text_to_geocode)\n# convert coordinates to an sf object\n#pueblos <- pueblos %>% sf::st_as_sf(coords = c(\"long\", \"lat\"), crs = 4326)\n#- situo los 4 pueblos como puntos\npp <- p + geom_point(data = pueblos, aes(x = long, y = lat), shape = 15, color = \"darkgreen\", size = 2.5) + \n  #geom_point(data = pueblos1, aes(x = LONGITUD_ETRS89, y = LATITUD_ETRS89), color = \"purple\") + \n  #ggrepel::geom_label_repel(data = pueblos, aes(x = long, y = lat, label = pueblo)) +\n  geom_text(data = pueblos, \n           aes(x = long, y = lat+0.003, label = pueblo),\n           color = \"darkgreen\", fontface = \"bold\",  check_overlap = TRUE, size = 3.1) \npp\n#- meto los accidentes geograficos de Pancrudo (nomenclator geografico del IGN)\naccidentes <- rio::import(\"/home/pjpv/Escritorio/my_datos_2021/datos/IGN/pancrudo_IGN_nomenclator_geografico.rds\")\ntipos_acc <- accidentes %>% distinct(codigo_ngbe, codigo_ngbe_text)\naccidentes_montes <- accidentes %>% filter(codigo_ngbe %in% c(\"4.1.3\", \"4.1.2\"))\naccidentes_fuentes <- accidentes %>% filter(codigo_ngbe %in% c(\"5.5\"))\naccidentes_vertices <- accidentes %>% filter(codigo_ngbe %in% c(\"2.3.1\"))\njanitor::tabyl(accidentes, codigo_ngbe_text )\npp_montes <- pp + \n  geom_point(data = accidentes_montes, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95), color = \"black\", shape = 17) +\n  geom_point(data = accidentes_vertices, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95), color = \"black\", shape = 8) +\n  geom_text(data = accidentes_vertices, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95+0.003, label = identificador_geografico),\n            color = \"black\", check_overlap = TRUE, size = 3) +\n  geom_text(data = accidentes_montes, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95-0.002, label = identificador_geografico),\n            color = \"black\", check_overlap = TRUE, size = 2.5) +\n  labs(title = \"Montes de Pancrudo\",\n       caption = \"\") +\n  theme(legend.position = \"none\") +\n  theme(plot.title = element_text(color = \"saddlebrown\"))+\n    theme(plot.title = element_text(hjust = 0.5))     # Center ggplot title\n  \n  \npp_fuentes <- pp + \n  geom_point(data = accidentes_fuentes, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95), color = \"navyblue\") +\n  geom_text(data = accidentes_fuentes, aes(x = long_etrs89_regcan95, y = lat_etrs89_regcan95-0.002, label = identificador_geografico),\n       color = \"navyblue\", check_overlap = TRUE, size = 2.5) +\n  labs(title = \"Fuentes de Pancrudo\", caption = \"\") +\n  theme(plot.title = element_text(color = \"midnightblue\"))+\n  theme(plot.title = element_text(hjust = 0.5))     # Center ggplot title\n#- OK voy a juntar pp_fuentes y pp_montes en un gr√°fico con patch y luego le voy a a√±adir label y caption con cowplot\nlibrary(patchwork)\nppp <- pp_montes + pp_fuentes \nlibrary(cowplot)\ntitle <- ggdraw() +\n  draw_label(\"Relieve del municipio de Pancrudo\",\n             fontfamily = \"DejaVu Serif Condensed\",\n             #colour = \"lightpink4\",\n             hjust = 0.5, size = 22)\ncaption <- ggdraw() +\n  draw_label(\"\\n Datos de montes y fuentes del IGN | Datos de elevaci√≥n del paquete elevatr\\n Geometr√≠as del paquete LAU2boundaries4spain | Visualizaci√≥n: @pjpv4444\",\n             #fontfamily = \"DejaVu Serif Condensed\",\n             #colour = \"lightpink4\",\n             hjust = 0.5,\n             size = 8) \n#-juntos el plot, el label y la caption\npppp <- plot_grid(title,\n               #plot_grid(ppp, nrow = 1, rel_widths = c(0.5, 0.5)),\n               ppp,\n               caption,\n               ncol = 1,\n               rel_heights = c(0.15, 0.754, 0.06))\npppp\n#- no consigo quitar el trozo blanco\nzz <- pppp + pjpv2020.01::theme_pjp_maps()\nzz  + theme(panel.background = ggplot2::element_rect(fill = \"#f5f5f2\", color = \"#f5f5f2\"),\n            plot.background = ggplot2::element_rect(fill = \"#f5f5f2\", color = NA),\n            panel.border = ggplot2::element_rect(fill = \"#f5f5f2\", color = NA))\nzz\nggsave(zz, filename = here::here(\"imagenes\", \"relieve_elevacion_Pancrudo_fuentes.png\"),\n       device = \"png\", width = 24, height = 17, units = \"cm\")\n#knitr::plot_crop(here::here(\"imagenes\", \"relieve_elevacion_Pancrudo_fuentes.png\"))\n\n\n\nFIN\n\nAl final en lugar de a rastras he ido para atr√°s: lo he hecho de las 2 maneras.‚Ü©Ô∏é\n",
    "preview": "flowers/2021-04-10-mapa-con-elevacin-de-pancrudo/imagenes/relieve_elevacion_Pancrudo_2.png",
    "last_modified": "2021-04-13T11:48:08+02:00",
    "input_file": {},
    "preview_width": 2362,
    "preview_height": 1771
  },
  {
    "path": "flowers/2021-03-02-art-map-de-valencia/",
    "title": "Streetmap de Valencia",
    "description": "En el primer post del renacido blog R & flowers hago, siguiendo el c√≥digo de este post (https://ggplot2tutor.com/viz-pages/streetmaps/streetmaps) de Christian Burkhart, una visualizaci√≥n de las calles de Valencia: un streetmap.",
    "author": [
      {
        "name": "Pedro J. P√©rez",
        "url": {}
      }
    ],
    "date": "2021-03-02",
    "categories": [
      "aRt",
      "street map"
    ],
    "contents": "\n\nContents\nIntro/motivaci√≥n\naRt map de Valencia\n\nEn el primer post del renacido blog R & flowers hago, siguiendo el c√≥digo de este post de Christian Burkhart, una visualizaci√≥n de las calles de Valencia: un streetmap.\nIntro/motivaci√≥n\nResulta que el blog de al lado me est√° saliendo como muy serio, solo hago que procesar datos del INE y hacer algunas visualizaciones, pero muchas veces juego con R a replicar y modificar an√°lisis que veo on the web, as√≠ que he decidido que algunos de estos ‚Äúan√°lisis‚Äù que hago los publicar√© aqu√≠. Si no los publico, muchas veces se acaban perdiendo, as√≠ que, vamos a ver si soy m√°s organizado y guardo al menos algunos de ellos.\naRt map de Valencia\nEmpiezo R & flowers blog replicando este post de Christian Burkhart. Resulta que Christian tiene unos fant√°sticos tutoriales, generalmente sobre visualizaci√≥n aqu√≠ y top√© de casualidad con unos gr√°ficos/visualizaciones chul√≠simos que hab√≠a hecho con las calles de su ciudad. Adem√°s Christian hac√≠a disponible el c√≥digo, gracias!!!, as√≠ que aqu√≠ estoy replicando su an√°lisis para hacer un streetmap de Valencia.\nSu c√≥digo ha funcionado sin problemas, solo he tenido que cambiar el nombre de la ciudad y s√≠ que al final he a√±adido algunas lineas para tunear mi visualizaci√≥n, pero cosas menores\n\n\nEl c√≥digo:\n\n#- Mapa con el callejero de una ciudad: https://ggplot2tutor.com/streetmaps/streetmaps/\n#- https://ggplot2tutor.com/viz-pages/streetmaps/streetmaps/\nlibrary(tidyverse)\nlibrary(osmdata)\nlibrary(sf)\n\naa <- osmdata::available_features()        #- a list of all features\nosmdata::available_tags(\"highway\")   #- all tags of a feature via osmdata\n\nosmdata::getbb(\"Valencia, Spain\")  #- bbox ; he x-value indicates the longitude\n\nmy_city <- \"Valencia, Spain\"\nstreets <- getbb(my_city)%>% opq() %>%\n            add_osm_feature(key = \"highway\", \n                value = c(\"motorway\", \"primary\", \"secondary\", \"tertiary\")) %>% osmdata_sf()\n\n#- small streets\nsmall_streets <- getbb(my_city) %>% opq() %>% \n                 add_osm_feature(key = \"highway\", \n                  value = c(\"residential\", \"living_street\", \n                            \"unclassified\", \"service\", \"footway\")) %>% osmdata_sf()\nzz_4 <- small_streets[[4]]  \nzz_5 <- small_streets[[5]]  \nplot(zz_5, max.plot = 1)\nzz_6 <- small_streets[[6]]  \n\nriver <- getbb(my_city) %>% opq() %>%\n                add_osm_feature(key = \"waterway\", value = \"river\") %>%\n                osmdata_sf()\n\nzz_4 <- river[[4]]  #\nzz_5 <- river[[5]]  \nplot(zz_5, max.plot = 1)\nzz_6 <- river[[6]]  #\n\n#- plot inicial\nggplot() + geom_sf(data = streets$osm_lines, inherit.aes = FALSE, color = \"black\", size = .4, alpha = .8) +\n           geom_sf(data = small_streets$osm_lines, inherit.aes = FALSE, color = \"red\", size = .3, alpha = .07) +                geom_sf(data = river$osm_lines,  inherit.aes = FALSE, color = \"blue\", size = .5, alpha = .5) + \n            coord_sf(xlim = c(-0.45, -0.27), ylim = c(39.27, 39.56), expand = FALSE) \n\n\n#- ya con un poco de color\nggplot() +\n  geom_sf(data = streets$osm_lines,\n          inherit.aes = FALSE,\n          color = \"steelblue\",          size = .4,\n          alpha = .8) +\n  geom_sf(data = small_streets$osm_lines,\n          inherit.aes = FALSE,\n          color = \"black\",\n          size = .4,\n          alpha = .6) +\n  geom_sf(data = river$osm_lines,\n          inherit.aes = FALSE,\n          color = \"black\",\n          size = .2,\n          alpha = .5) +\n  coord_sf(xlim = c(-0.45, -0.27), ylim = c(39.27, 39.56), expand = FALSE) \n\n\n#- gr√°fico final ---------------------\nlibrary(ggfx)\nlibrary(ragg)\n#- para guardar el plot me apoy√© en:\n#- https://github.com/gkaramanis/tidytuesday/tree/master/2021/2021-week8\nagg_png(\"./aRt_map_valencia.png\", res = 300, height = 8, width = 6, units = \"in\")\np <- ggplot() +\n  geom_sf(data = streets$osm_lines,\n          inherit.aes = FALSE, color = \"#7fc0ff\", \n          size = .4, alpha = .8) +\n  geom_sf(data = small_streets$osm_lines,\n          inherit.aes = FALSE, color = \"#ffbe7f\", \n          size = .2, alpha = .6) +\n  geom_sf(data = river$osm_lines,\n          inherit.aes = FALSE, color = \"#ffbe7f\", \n          size = .2, alpha = .5) +\n  coord_sf(xlim = c(-0.44, -0.295), ylim = c(39.415, 39.52), expand = FALSE) +\n  labs(title = \"Valencia, Spain\") +\n  theme_void() +\n  theme(plot.background = element_rect(fill = \"#282828\")  ) +\n  theme(plot.title = element_text(face = \"bold\", \n        color = \"#ffbe7f\", hjust = 0.45, vjust = -161)) + \n  theme(plot.margin = unit(c(0.1, 0.05, 1.7, 0.1), \"cm\")) +\n  theme(plot.background = element_rect(colour = \"snow2\", size = 10.7)) +\n  geom_text(data = data.frame(x = -0.31, y = 39.475, \n        label = \"mar \\n  Mediterr√°neo\"),\n        mapping = aes(x = x, y = y, label = label),\n        size = 2.82, angle = 77L, hjust = 0, vjust = 0.5, \n        colour = \"#7fc0ff\", inherit.aes = FALSE)\n\nprint(p)\ndev.off()\nknitr::plot_crop(here::here(\"imagenes\", \"aRt_map_valencia.png\"))\n\n\n\nEl resultado:\n\n\n\nFin\nPD: Hoy, jueves 25 de marzo de 2021, he visto este post de Esteban Moro. Me lo apunto por si alg√∫n d√≠a retomo el mapstreet. Otro m√°s, esta vez de Dean Marchiori y su mapa de Culburra.\n\n\n\n",
    "preview": "flowers/2021-03-02-art-map-de-valencia/imagenes/preview_aRt_map_valencia.png",
    "last_modified": "2021-04-10T10:32:28+02:00",
    "input_file": {},
    "preview_width": 616,
    "preview_height": 322
  }
]
