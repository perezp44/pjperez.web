[
  {
    "path": "flowers/2021-03-02-art-map-de-valencia/",
    "title": "Streetmap de Valencia",
    "description": "En el primer post del renacido blog R & flowers hago, siguiendo el código de este post (https://ggplot2tutor.com/viz-pages/streetmaps/streetmaps) de  Christian Burkhart, una visualización de las calles de Valencia: un streetmap.",
    "author": [
      {
        "name": "Pedro J. Pérez",
        "url": {}
      }
    ],
    "date": "2021-03-02",
    "categories": [
      "aRt",
      "street map"
    ],
    "contents": "\n\nContents\nIntro/motivación\naRt map de Valencia\n\nEn el primer post del renacido blog R & flowers hago, siguiendo el código de este post de Christian Burkhart, una visualización de las calles de Valencia: un streetmap.\nIntro/motivación\nResulta que el blog de al lado me está saliendo como muy serio, solo hago que procesar datos del INE y hacer algunas visualizaciones, pero muchas veces juego con R a replicar y modificar análisis que veo on the web, así que he decidido que algunos de estos “análisis” que hago los publicaré aquí. Si no los publico, muchas veces se acaban perdiendo, así que, vamos a ver si soy más organizado y guardo al menos algunos de ellos.\naRt map de Valencia\nEmpiezo R & flowers blog replicando este post de Christian Burkhart. Resulta que Christian tiene unos fantásticos tutoriales, generalmente sobre visualización aquí y topé de casualidad con unos gráficos/visualizaciones chulísimos que había hecho con las calles de su ciudad. Además Christian hacía disponible el código, gracias!!!, así que aquí estoy replicando su análisis para hacer un streetmap de Valencia.\nSu código ha funcionado sin problemas, solo he tenido que cambiar el nombre de la ciudad y sí que al final he añadido algunas lineas para tunear mi visualización, pero cosas menores\n\n\nEl código:\n\n#- Mapa con el callejero de una ciudad: https://ggplot2tutor.com/streetmaps/streetmaps/\n#- https://ggplot2tutor.com/viz-pages/streetmaps/streetmaps/\nlibrary(tidyverse)\nlibrary(osmdata)\nlibrary(sf)\n\naa <- osmdata::available_features()        #- a list of all features\nosmdata::available_tags(\"highway\")   #- all tags of a feature via osmdata\n\nosmdata::getbb(\"Valencia, Spain\")  #- bbox ; he x-value indicates the longitude\n\nmy_city <- \"Valencia, Spain\"\nstreets <- getbb(my_city)%>% opq() %>%\n            add_osm_feature(key = \"highway\", \n                value = c(\"motorway\", \"primary\", \"secondary\", \"tertiary\")) %>% osmdata_sf()\n\n#- small streets\nsmall_streets <- getbb(my_city) %>% opq() %>% \n                 add_osm_feature(key = \"highway\", \n                  value = c(\"residential\", \"living_street\", \n                            \"unclassified\", \"service\", \"footway\")) %>% osmdata_sf()\nzz_4 <- small_streets[[4]]  \nzz_5 <- small_streets[[5]]  \nplot(zz_5, max.plot = 1)\nzz_6 <- small_streets[[6]]  \n\nriver <- getbb(my_city) %>% opq() %>%\n                add_osm_feature(key = \"waterway\", value = \"river\") %>%\n                osmdata_sf()\n\nzz_4 <- river[[4]]  #\nzz_5 <- river[[5]]  \nplot(zz_5, max.plot = 1)\nzz_6 <- river[[6]]  #\n\n#- plot inicial\nggplot() + geom_sf(data = streets$osm_lines, inherit.aes = FALSE, color = \"black\", size = .4, alpha = .8) +\n           geom_sf(data = small_streets$osm_lines, inherit.aes = FALSE, color = \"red\", size = .3, alpha = .07) +                geom_sf(data = river$osm_lines,  inherit.aes = FALSE, color = \"blue\", size = .5, alpha = .5) + \n            coord_sf(xlim = c(-0.45, -0.27), ylim = c(39.27, 39.56), expand = FALSE) \n\n\n#- ya con un poco de color\nggplot() +\n  geom_sf(data = streets$osm_lines,\n          inherit.aes = FALSE,\n          color = \"steelblue\",          size = .4,\n          alpha = .8) +\n  geom_sf(data = small_streets$osm_lines,\n          inherit.aes = FALSE,\n          color = \"black\",\n          size = .4,\n          alpha = .6) +\n  geom_sf(data = river$osm_lines,\n          inherit.aes = FALSE,\n          color = \"black\",\n          size = .2,\n          alpha = .5) +\n  coord_sf(xlim = c(-0.45, -0.27), ylim = c(39.27, 39.56), expand = FALSE) \n\n\n#- gráfico final ---------------------\nlibrary(ggfx)\nlibrary(ragg)\n#- para guardar el plot me apoyé en:\n#- https://github.com/gkaramanis/tidytuesday/tree/master/2021/2021-week8\nagg_png(\"./aRt_map_valencia.png\", res = 300, height = 8, width = 6, units = \"in\")\np <- ggplot() +\n  geom_sf(data = streets$osm_lines,\n          inherit.aes = FALSE, color = \"#7fc0ff\", \n          size = .4, alpha = .8) +\n  geom_sf(data = small_streets$osm_lines,\n          inherit.aes = FALSE, color = \"#ffbe7f\", \n          size = .2, alpha = .6) +\n  geom_sf(data = river$osm_lines,\n          inherit.aes = FALSE, color = \"#ffbe7f\", \n          size = .2, alpha = .5) +\n  coord_sf(xlim = c(-0.44, -0.295), ylim = c(39.415, 39.52), expand = FALSE) +\n  labs(title = \"Valencia, Spain\") +\n  theme_void() +\n  theme(plot.background = element_rect(fill = \"#282828\")  ) +\n  theme(plot.title = element_text(face = \"bold\", \n        color = \"#ffbe7f\", hjust = 0.45, vjust = -161)) + \n  theme(plot.margin = unit(c(0.1, 0.05, 1.7, 0.1), \"cm\")) +\n  theme(plot.background = element_rect(colour = \"snow2\", size = 10.7)) +\n  geom_text(data = data.frame(x = -0.31, y = 39.475, \n        label = \"mar \\n  Mediterraneo\"),\n        mapping = aes(x = x, y = y, label = label),\n        size = 2.82, angle = 77L, hjust = 0, vjust = 0.5, \n        colour = \"#7fc0ff\", inherit.aes = FALSE)\n\nprint(p)\ndev.off()\nknitr::plot_crop(here::here(\"imagenes\", \"aRt_map_valencia.png\"))\n\n\n\nEl resultado:\n\n\n\nFín\n\n\n\n",
    "preview": "flowers/2021-03-02-art-map-de-valencia/imagenes/preview_aRt_map_valencia.png",
    "last_modified": "2021-03-02T13:48:53+01:00",
    "input_file": {},
    "preview_width": 616,
    "preview_height": 322
  }
]
